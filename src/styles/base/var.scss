@import '../theme/default.scss'; // 引入默认的颜色配色
// 定义公共的主题颜色MAP
$colorMaps: (
  default: $defaultColorMap
);

// 响应式背景
@mixin img-retina($file-1x, $file-2x, $width-1x, $height-1x) {
  background-image: url("#{$file-1x}");
  background-image: -webkit-image-set(url("#{$file-1x}") 1x, url("#{$file-2x}") 2x);
  background-image: image-set(url("#{$file-1x}") 1x, url("#{$file-2x}") 2x);
  background-size: $width-1x $height-1x;
}

// 多行省略号
@mixin line-overflow( $line ){
  display:-webkit-box;
  overflow:hidden;
  text-overflow:ellipsis;
  -webkit-line-clamp:$line;
  -webkit-box-orient:vertical;
}

// 清除浮动
@mixin clearfix() {
  &:before,
  &:after {
    content: " ";
    display: table;
  }
  &:after {
    clear: both;
  }
}

// 转换单位为em
@function px2em($px, $base-font-size: 16px) {
  @if (unitless($px)) {
    @warn "Assuming #{$px} to be in pixels, attempting to convert it into pixels for you";
    @return px2em($px + 0px); // That may fail.
  } @else if (unit($px) == em) {
    @return $px;
  }
  @return ($px / $base-font-size) * 1em;
}

// 转换单位rem
@function px2rem($px-values,$baseline-px:16px,$support-for-ie:false){
    //Conver the baseline into rems
    $baseline-rem: $baseline-px / 1rem * 2;
    //Print the first line in pixel values
    @if $support-for-ie {
        @return $px-values;
    }
    //if there is only one (numeric) value, return the property/value line for it.
    @if type-of($px-values) == "number"{
        @return $px-values / $baseline-rem;
    }
    @else {
        //Create an empty list that we can dump values into
        $rem-values:();
        @each $value in $px-values{
            // If the value is zero or not a number, return it
            @if $value == 0 or type-of($value) != "number"{
                $rem-values: append($rem-values, $value / $baseline-rem);
            }
        }
        @return $rem-values;
    }
}

// 设置字体的dpr
@mixin font-dpr($font-size){
  font-size: $font-size;
  [data-dpr="2"] & {
    font-size: $font-size * 2;
  }
  [data-dpr="3"] & {
    font-size: $font-size * 3;
  }
}

// 文本省略号
@mixin txt-overflow($width) {
  max-width:$width;
  white-space:nowrap;
  text-overflow: ellipsis;
  overflow: hidden;
}

@mixin box-shadow-color($left, $right, $leftBottom, $rightBottom, $alphaVal, $colorName) {
  @each $key,$list in $colorMaps {
    @each $varName,$val in $list {
      @if $colorName == $varName {
        [data-theme= #{$key}] & {
          box-shadow: $left $right $leftBottom $rightBottom $val;
          opacity: $alphaVal;
        }
      }
    }
  }
}

// 更改背景颜色
@mixin bg-color($colorName) {
  @each $key,$list in $colorMaps {
    @each $varName,$val in $list {
      @if $colorName == $varName {
        [data-theme= #{$key}] & {
          background-color: $val;
        }
      }
    }
  }
}

// 更改透明背景颜色
@mixin bg-alpha-color($colorName, $alphaVal) {
  @each $key,$list in $colorMaps {
    @each $varName,$val in $list {
      @if $colorName == $varName {
        [data-theme= #{$key}] & {
          background-color: $val;
          opacity: $alphaVal;
        }
      }
    }
  }
}

// 更改渐变颜色
@mixin bg-linear-color($colorName) {
  @each $key,$list in $colorMaps {
    @each $varName,$val in $list {
      @if $colorName == $varName {
        [data-theme= #{$key}] & {
          background: $val;
        }
      }
    }
  }
}

// 更改背景颜色
@mixin font-color($fontName) {
  @each $key,$list in $colorMaps {
    @each $varName,$val in $list {
      @if $fontName == $varName {
        [data-theme= #{$key}] & {
          color: $val;
        }
      }
    }
  }
}

// 更改背景颜色
@mixin border($direction,$width,$style,$color) {
  @each $key,$list in $colorMaps {
    @each $varName,$val in $list {
      @if $color == $varName {
        @if $direction == 'all' {
          [data-theme= #{$key}] & {
            border-width: $width;
            border-color: $val;
            border-style: $style;
          }
        }
        @else if $direction == 'top' {
          [data-theme= #{$key}] & {
            border-top-width: $width;
            border-top-color: $val;
            border-top-style: $style;
          }
        }
        @else if $direction == 'left' {
          [data-theme= #{$key}] & {
            border-left-width: $width;
            border-left-color: $val;
            border-left-style: $style;
          }
        }
        @else if $direction == 'right' {
          [data-theme= #{$key}] & {
            border-right-width: $width;
            border-right-color: $val;
            border-right-style: $style;
          }
        }
        @else if $direction == 'bottom' {
          [data-theme= #{$key}] & {
            border-bottom-width: $width;
            border-bottom-color: $val;
            border-bottom-style: $style;
          }
        }
      }
    }
  }
}
